import asyncio
from telegram import Bot
from telegram.error import RetryAfter
from config import TOKEN, CHANNEL_ID, COINGECKO
import get_data

async def send_message(bot, chat_id):
    try:
        data = get_data.get_current_prices()
        finnal_data = ''
        finnal_data += f"üü†{data[0]['symbol'].upper()} "
        finnal_data += f"{data[0]['current_price']}$ | "
        finnal_data += f"üìà{round(data[0]['price_change_percentage_24h'], 2)}%\n\n"
        finnal_data += f"üîµ{data[1]['symbol'].upper()} "
        finnal_data += f"{data[1]['current_price']}$ | "
        finnal_data += f"üìà{round(data[1]['price_change_percentage_24h'], 2)}%\n\n"
        finnal_data += get_data.domination()
        finnal_data += ("\n")
        finnal_data += get_data.get_gas()
        await bot.send_message(chat_id=chat_id, text=finnal_data)
        print("–°–æ–æ–±—â–µ–Ω–∏–µ 1 –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª.")

        finnal_data = ''
        for coin in data[2:]:
            finnal_data += f"üîπ{coin['symbol'].upper()}"
            finnal_data += f" {coin['current_price']}$ | "
            finnal_data += f"{round(coin['price_change_percentage_24h'], 2)}%\n\n"
        await bot.send_message(chat_id=chat_id, text=finnal_data)
        print("–°–æ–æ–±—â–µ–Ω–∏–µ 2 –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª.")

    except RetryAfter as e:
        retry_after = e.retry_after
        print(f"–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ {retry_after} —Å–µ–∫—É–Ω–¥.")
        await asyncio.sleep(retry_after)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {str(e)}")


async def main():
    bot = Bot(token=TOKEN)
    await send_message(bot, CHANNEL_ID)

if __name__ == '__main__':
    asyncio.run(main())